SELECT * FROM pg_proc WHERE proname = 'get_aqpoints_annual_04'


------------------------- get_aqpoints_annual_04

CREATE OR REPLACE FUNCTION get_aqpoints_annual_04(points_id_array TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_annual_04 as $$
    BEGIN
    RETURN query EXECUTE  'with r as (SELECT unnest(Array'|| points_id_array ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address), points as (SELECT *, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM r) SELECT points.points_id::int, points.location_name::text, points.input_address::text, points.match_address::text, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude,  hn.maj_name::text as major_basin_name,  hn.sub_name::text as minor_basin_name, aq.major_aquifer_system_name::text as aquifer_name, rn.string_id::text, rn.aq30_id::numeric, rn.pfaf_id::numeric, rn.gid_1::text, rn.aqid::numeric, rn.gid_0::text, w.name_0::text, w.name_1::text, rn.area_km2::numeric, rn.bws_raw::numeric, rn.bws_score::numeric, rn.bws_cat::numeric, rn.bws_label::text, rn.bwd_raw::numeric, rn.bwd_score::numeric, rn.bwd_cat::numeric, rn.bwd_label::text, rn.iav_raw::numeric, rn.iav_score::numeric, rn.iav_cat::numeric, rn.iav_label::text, rn.sev_raw::numeric, rn.sev_score::numeric, rn.sev_cat::numeric, rn.sev_label::text, rn.gtd_raw::numeric, rn.gtd_score::numeric, rn.gtd_cat::numeric, rn.gtd_label::text, rn.rfr_raw::numeric, rn.rfr_score::numeric, rn.rfr_cat::numeric, rn.rfr_label::text, rn.cfr_raw::numeric, rn.cfr_score::numeric, rn.cfr_cat::numeric, rn.cfr_label::text, rn.drr_raw::numeric, rn.drr_score::numeric, rn.drr_cat::numeric, rn.drr_label::text, rn.ucw_raw::numeric, rn.ucw_score::numeric, rn.ucw_cat::numeric, rn.ucw_label::text, rn.cep_raw::numeric, rn.cep_score::numeric, rn.cep_cat::numeric, rn.cep_label::text, rn.udw_raw::numeric, rn.udw_score::numeric, rn.udw_cat::numeric, rn.udw_label::text, rn.usa_raw::numeric, rn.usa_score::numeric, rn.usa_cat::numeric, rn.usa_label::text, rn.rri_raw::numeric, rn.rri_score::numeric, rn.rri_cat::numeric, rn.rri_label::text, rn.w_awr_def_qan_raw::numeric, rn.w_awr_def_qan_score::numeric, rn.w_awr_def_qan_cat::numeric, rn.w_awr_def_qan_label::text, rn.w_awr_def_qan_weight_fraction::numeric, rn.w_awr_def_qal_raw::numeric, rn.w_awr_def_qal_score::numeric, rn.w_awr_def_qal_cat::numeric, rn.w_awr_def_qal_label::text, rn.w_awr_def_qal_weight_fraction::numeric, rn.w_awr_def_rrr_raw::numeric, rn.w_awr_def_rrr_score::numeric, rn.w_awr_def_rrr_cat::numeric, rn.w_awr_def_rrr_label::text, rn.w_awr_def_rrr_weight_fraction::numeric, rn.w_awr_def_tot_raw::numeric, rn.w_awr_def_tot_score::numeric, rn.w_awr_def_tot_cat::numeric, rn.w_awr_def_tot_label::text, rn.w_awr_def_tot_weight_fraction::numeric, rn.w_awr_agr_qan_raw::numeric, rn.w_awr_agr_qan_score::numeric, rn.w_awr_agr_qan_cat::numeric, rn.w_awr_agr_qan_label::text, rn.w_awr_agr_qan_weight_fraction::numeric, rn.w_awr_agr_qal_raw::numeric, rn.w_awr_agr_qal_score::numeric, rn.w_awr_agr_qal_cat::numeric, rn.w_awr_agr_qal_label::text, rn.w_awr_agr_qal_weight_fraction::numeric, rn.w_awr_agr_rrr_raw::numeric, rn.w_awr_agr_rrr_score::numeric, rn.w_awr_agr_rrr_cat::numeric, rn.w_awr_agr_rrr_label::text, rn.w_awr_agr_rrr_weight_fraction::numeric, rn.w_awr_agr_tot_raw::numeric, rn.w_awr_agr_tot_score::numeric, rn.w_awr_agr_tot_cat::numeric, rn.w_awr_agr_tot_label::text, rn.w_awr_agr_tot_weight_fraction::numeric, rn.w_awr_che_qan_raw::numeric, rn.w_awr_che_qan_score::numeric, rn.w_awr_che_qan_cat::numeric, rn.w_awr_che_qan_label::text, rn.w_awr_che_qan_weight_fraction::numeric, rn.w_awr_che_qal_raw::numeric, rn.w_awr_che_qal_score::numeric, rn.w_awr_che_qal_cat::numeric, rn.w_awr_che_qal_label::text, rn.w_awr_che_qal_weight_fraction::numeric, rn.w_awr_che_rrr_raw::numeric, rn.w_awr_che_rrr_score::numeric, rn.w_awr_che_rrr_cat::numeric, rn.w_awr_che_rrr_label::text, rn.w_awr_che_rrr_weight_fraction::numeric, rn.w_awr_che_tot_raw::numeric, rn.w_awr_che_tot_score::numeric, rn.w_awr_che_tot_cat::numeric, rn.w_awr_che_tot_label::text, rn.w_awr_che_tot_weight_fraction::numeric, rn.w_awr_con_qan_raw::numeric, rn.w_awr_con_qan_score::numeric, rn.w_awr_con_qan_cat::numeric, rn.w_awr_con_qan_label::text, rn.w_awr_con_qan_weight_fraction::numeric, rn.w_awr_con_qal_raw::numeric, rn.w_awr_con_qal_score::numeric, rn.w_awr_con_qal_cat::numeric, rn.w_awr_con_qal_label::text, rn.w_awr_con_qal_weight_fraction::numeric, rn.w_awr_con_rrr_raw::numeric, rn.w_awr_con_rrr_score::numeric, rn.w_awr_con_rrr_cat::numeric, rn.w_awr_con_rrr_label::text, rn.w_awr_con_rrr_weight_fraction::numeric, rn.w_awr_con_tot_raw::numeric, rn.w_awr_con_tot_score::numeric, rn.w_awr_con_tot_cat::numeric, rn.w_awr_con_tot_label::text, rn.w_awr_con_tot_weight_fraction::numeric, rn.w_awr_elp_qan_raw::numeric, rn.w_awr_elp_qan_score::numeric, rn.w_awr_elp_qan_cat::numeric, rn.w_awr_elp_qan_label::text, rn.w_awr_elp_qan_weight_fraction::numeric, rn.w_awr_elp_qal_raw::numeric, rn.w_awr_elp_qal_score::numeric, rn.w_awr_elp_qal_cat::numeric, rn.w_awr_elp_qal_label::text, rn.w_awr_elp_qal_weight_fraction::numeric, rn.w_awr_elp_rrr_raw::numeric, rn.w_awr_elp_rrr_score::numeric, rn.w_awr_elp_rrr_cat::numeric, rn.w_awr_elp_rrr_label::text, rn.w_awr_elp_rrr_weight_fraction::numeric, rn.w_awr_elp_tot_raw::numeric, rn.w_awr_elp_tot_score::numeric, rn.w_awr_elp_tot_cat::numeric, rn.w_awr_elp_tot_label::text, rn.w_awr_elp_tot_weight_fraction::numeric, rn.w_awr_fnb_qan_raw::numeric, rn.w_awr_fnb_qan_score::numeric, rn.w_awr_fnb_qan_cat::numeric, rn.w_awr_fnb_qan_label::text, rn.w_awr_fnb_qan_weight_fraction::numeric, rn.w_awr_fnb_qal_raw::numeric, rn.w_awr_fnb_qal_score::numeric, rn.w_awr_fnb_qal_cat::numeric, rn.w_awr_fnb_qal_label::text, rn.w_awr_fnb_qal_weight_fraction::numeric, rn.w_awr_fnb_rrr_raw::numeric, rn.w_awr_fnb_rrr_score::numeric, rn.w_awr_fnb_rrr_cat::numeric, rn.w_awr_fnb_rrr_label::text, rn.w_awr_fnb_rrr_weight_fraction::numeric, rn.w_awr_fnb_tot_raw::numeric, rn.w_awr_fnb_tot_score::numeric, rn.w_awr_fnb_tot_cat::numeric, rn.w_awr_fnb_tot_label::text, rn.w_awr_fnb_tot_weight_fraction::numeric, rn.w_awr_min_qan_raw::numeric, rn.w_awr_min_qan_score::numeric, rn.w_awr_min_qan_cat::numeric, rn.w_awr_min_qan_label::text, rn.w_awr_min_qan_weight_fraction::numeric, rn.w_awr_min_qal_raw::numeric, rn.w_awr_min_qal_score::numeric, rn.w_awr_min_qal_cat::numeric, rn.w_awr_min_qal_label::text, rn.w_awr_min_qal_weight_fraction::numeric, rn.w_awr_min_rrr_raw::numeric, rn.w_awr_min_rrr_score::numeric, rn.w_awr_min_rrr_cat::numeric, rn.w_awr_min_rrr_label::text, rn.w_awr_min_rrr_weight_fraction::numeric, rn.w_awr_min_tot_raw::numeric, rn.w_awr_min_tot_score::numeric, rn.w_awr_min_tot_cat::numeric, rn.w_awr_min_tot_label::text, rn.w_awr_min_tot_weight_fraction::numeric, rn.w_awr_ong_qan_raw::numeric, rn.w_awr_ong_qan_score::numeric, rn.w_awr_ong_qan_cat::numeric, rn.w_awr_ong_qan_label::text, rn.w_awr_ong_qan_weight_fraction::numeric, rn.w_awr_ong_qal_raw::numeric, rn.w_awr_ong_qal_score::numeric, rn.w_awr_ong_qal_cat::numeric, rn.w_awr_ong_qal_label::text, rn.w_awr_ong_qal_weight_fraction::numeric, rn.w_awr_ong_rrr_raw::numeric, rn.w_awr_ong_rrr_score::numeric, rn.w_awr_ong_rrr_cat::numeric, rn.w_awr_ong_rrr_label::text, rn.w_awr_ong_rrr_weight_fraction::numeric, rn.w_awr_ong_tot_raw::numeric, rn.w_awr_ong_tot_score::numeric, rn.w_awr_ong_tot_cat::numeric, rn.w_awr_ong_tot_label::text, rn.w_awr_ong_tot_weight_fraction::numeric, rn.w_awr_smc_qan_raw::numeric, rn.w_awr_smc_qan_score::numeric, rn.w_awr_smc_qan_cat::numeric, rn.w_awr_smc_qan_label::text, rn.w_awr_smc_qan_weight_fraction::numeric, rn.w_awr_smc_qal_raw::numeric, rn.w_awr_smc_qal_score::numeric, rn.w_awr_smc_qal_cat::numeric, rn.w_awr_smc_qal_label::text, rn.w_awr_smc_qal_weight_fraction::numeric, rn.w_awr_smc_rrr_raw::numeric, rn.w_awr_smc_rrr_score::numeric, rn.w_awr_smc_rrr_cat::numeric, rn.w_awr_smc_rrr_label::text, rn.w_awr_smc_rrr_weight_fraction::numeric, rn.w_awr_smc_tot_raw::numeric, rn.w_awr_smc_tot_score::numeric, rn.w_awr_smc_tot_cat::numeric, rn.w_awr_smc_tot_label::text, rn.w_awr_smc_tot_weight_fraction::numeric, rn.w_awr_tex_qan_raw::numeric, rn.w_awr_tex_qan_score::numeric, rn.w_awr_tex_qan_cat::numeric, rn.w_awr_tex_qan_label::text, rn.w_awr_tex_qan_weight_fraction::numeric, rn.w_awr_tex_qal_raw::numeric, rn.w_awr_tex_qal_score::numeric, rn.w_awr_tex_qal_cat::numeric, rn.w_awr_tex_qal_label::text, rn.w_awr_tex_qal_weight_fraction::numeric, rn.w_awr_tex_rrr_raw::numeric, rn.w_awr_tex_rrr_score::numeric, rn.w_awr_tex_rrr_cat::numeric, rn.w_awr_tex_rrr_label::text, rn.w_awr_tex_rrr_weight_fraction::numeric, rn.w_awr_tex_tot_raw::numeric, rn.w_awr_tex_tot_score::numeric, rn.w_awr_tex_tot_cat::numeric, rn.w_awr_tex_tot_label::text, rn.w_awr_tex_tot_weight_fraction::numeric, points.the_geom::geometry     FROM  points     LEFT JOIN y2018m12d06_rh_master_shape_v01 g on  st_intersects(g.the_geom , points.the_geom)     LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on st_intersects(points.the_geom , hn.the_geom)     LEFT JOIN aquifer_names_simple_v01 aq on st_intersects(aq.the_geom , points.the_geom)     LEFT JOIN water_risk_indicators_annual_aqueduct40 rn on (rn.aq30_id=g.aq30_id)     LEFT JOIN gadm_wri w on (rn.gid_1=w.gid_1)';

    END

$$ language 'plpgsql';


------------------------ get_aqpoints_annual_custom_test

CREATE OR REPLACE FUNCTION get_aqpoints_annual_custom_test(points_id_array TEXT, weights_array TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_annual_custom_test as $$
    BEGIN
	RETURN query EXECUTE  'with points as (SELECT *, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM (SELECT  unnest(Array'|| points_id_array ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address) a), r as (SELECT * FROM (SELECT unnest(Array'|| weights_array ||') as weights, unnest(Array[''bws'', ''bwd'', ''iav'', ''sev'', ''gtd'', ''rfr'', ''cfr'', ''drr'',  ''ucw'', ''cep'', ''udw'', ''usa'', ''rri'']) as indicator) as a WHERE weights is not null ), s as (SELECT indicator, weights/sum_weights as weight_fraction FROM ( SELECT sum(weights) over () as sum_weights,  weights, indicator FROM r ) as a ), u as (SELECT aq30_id, string_id, sum(weight_fraction) as weight_fraction, sum(weighted_score) as weighted_score FROM ( SELECT t.group_short, t.indicator, t.score, t.aq30_id, t.string_id, s.weight_fraction, t.score*s.weight_fraction as weighted_score FROM water_risk_indicators_custom_aqueduct40 t LEFT JOIN s on t.indicator=s.indicator ) as u GROUP BY aq30_id, string_id), w as  (SELECT aq30_id, string_id, weighted_score/weight_fraction as raw FROM u), v as  (SELECT w.*, CASE WHEN (w.raw <= 5) and  (w.raw > 2.675) THEN ''High'' WHEN (w.raw <= 2.675) and  (w.raw > 2.101) THEN ''Medium - High'' WHEN (w.raw <= 2.101) and  (w.raw > 1.607) THEN ''Medium'' WHEN (w.raw <= 1.607) and  (w.raw > 1.000) THEN ''Low - Medium'' WHEN (w.raw <= 1.000) and  (w.raw > 0) THEN ''Low'' WHEN (w.raw <= 0) and  (w.raw > -1) THEN ''Arid and Low Water Use'' WHEN w.raw <= -1 THEN ''No Data'' END as label FROM w) SELECT points.points_id::int, points.location_name, points.input_address, points.match_address, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude, hn.maj_name as major_basin_name, hn.sub_name as minor_basin_name, aq.major_aquifer_system_name as aquifer_name, rn.string_id, v.aq30_id::numeric, rn.gid_1, rn.gid_0, rn.name_0, rn.name_1, v.raw::numeric, v.label, points.the_geom FROM  Points LEFT JOIN y2018m12d06_rh_master_shape_v01 g on  st_intersects(g.the_geom, points.the_geom) LEFT JOIN v on (v.aq30_id=g.aq30_id) LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on st_intersects(points.the_geom, hn.the_geom) LEFT JOIN aquifer_names_simple_v01 aq on st_intersects(aq.the_geom, points.the_geom) LEFT JOIN water_risk_indicators_annual_aqueduct40 rn on (rn.aq30_id=g.aq30_id)';

	END

$$ language 'plpgsql';



----------------------- get_aqpoints_monthly_04_all

CREATE OR REPLACE FUNCTION get_aqpoints_monthly_04_all(ids TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_monthly_04_all as $$
    BEGIN
    RETURN query EXECUTE  'with points as (SELECT points_id, location_name, input_address, match_address, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM (SELECT unnest(Array'|| ids ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address) a), water_risk_monthly as (SELECT * FROM water_risk_indicators_monthly_aqueduct40) SELECT points.points_id::numeric, points.location_name, points.input_address, points.match_address, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude, hn.maj_name as major_basin_name, hn.sub_name as minor_basin_name, aq.major_aquifer_system_name as aquifer_name, g.pfaf_id::numeric, w.gid_1, gid_0, name_0, name_1, month::numeric, bws_raw::numeric, bws_score::numeric, bws_cat::numeric, bws_label, bwd_raw::numeric, bwd_score::numeric, bwd_cat::numeric, bwd_label, iav_raw::numeric, iav_score::numeric, iav_cat::numeric, iav_label, points.the_geom::geometry FROM  points LEFT JOIN y2018m12d06_rh_master_shape_v01 g on ST_DWithin(g.the_geom , points.the_geom, 1e-10) LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on ST_DWithin(points.the_geom , hn.the_geom, 1e-10) LEFT JOIN gadm_wri w on ST_DWithin(w.the_geom, points.the_geom, 1e-10) LEFT JOIN aquifer_names_simple_v01 aq on ST_DWithin(aq.the_geom , points.the_geom, 1e-10) LEFT JOIN water_risk_monthly rn on (rn.pfaf_id=g.pfaf_id)' ;

    END

$$ language 'plpgsql';



---------------------- get_aqpoints_monthly_04

CREATE OR REPLACE FUNCTION get_aqpoints_monthly_04(ids TEXT, month TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_monthly_04 as $$
    BEGIN
    RETURN query EXECUTE  'with points as (SELECT points_id, location_name, input_address, match_address, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM (SELECT unnest(Array'|| ids ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address) a), water_risk_monthly as (SELECT * FROM water_risk_indicators_monthly_aqueduct40 WHERE month = '|| month ||') SELECT points.points_id::numeric, points.location_name, points.input_address, points.match_address, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude, hn.maj_name as major_basin_name, hn.sub_name as minor_basin_name, aq.major_aquifer_system_name as aquifer_name, g.pfaf_id::numeric, w.gid_1, gid_0, name_0, name_1, month::numeric, bws_raw::numeric, bws_score::numeric, bws_cat::numeric, bws_label, bwd_raw::numeric, bwd_score::numeric, bwd_cat::numeric, bwd_label, iav_raw::numeric, iav_score::numeric, iav_cat::numeric, iav_label, points.the_geom::geometry FROM  points LEFT JOIN y2018m12d06_rh_master_shape_v01 g on ST_DWithin(g.the_geom , points.the_geom, 1e-10) LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on ST_DWithin(points.the_geom , hn.the_geom, 1e-10) LEFT JOIN gadm_wri w on ST_DWithin(w.the_geom, points.the_geom, 1e-10) LEFT JOIN aquifer_names_simple_v01 aq on ST_DWithin(aq.the_geom , points.the_geom, 1e-10) LEFT JOIN water_risk_monthly rn on (rn.pfaf_id=g.pfaf_id)' ;

    END

$$ language 'plpgsql';



---------------------- get_aqpoints_projected_04_all

DROP FUNCTION get_aqpoints_projected_04_all(ids TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT);

DROP TYPE point_intersection_projected_04_all;

CREATE TYPE point_intersection_projected_04_all AS (points_id numeric, location_name text, input_address text, match_address text, latitude numeric, longitude numeric, major_basin_name text, minor_basin_name text, aquifer_name text, pfaf_id numeric, gid_1 text, gid_0 text, name_0 text, name_1 text, bau30_ba_x_l text, bau50_ba_x_l text, bau80_ba_x_l text, opt30_ba_x_l text, opt50_ba_x_l text, opt80_ba_x_l text, pes30_ba_x_l text, pes50_ba_x_l text, pes80_ba_x_l text, bau30_ww_x_l text, bau50_ww_x_l text, bau80_ww_x_l text, opt30_ww_x_l text, opt50_ww_x_l text, opt80_ww_x_l text, pes30_ww_x_l text, pes50_ww_x_l text, pes80_ww_x_l text, bau30_ws_x_l text, bau50_ws_x_l text, bau80_ws_x_l text, opt30_ws_x_l text, opt50_ws_x_l text, opt80_ws_x_l text, pes30_ws_x_l text, pes50_ws_x_l text, pes80_ws_x_l text, bau30_wd_x_l text, bau50_wd_x_l text, bau80_wd_x_l text, opt30_wd_x_l text, opt50_wd_x_l text, opt80_wd_x_l text, pes30_wd_x_l text, pes50_wd_x_l text, pes80_wd_x_l text, bau30_iv_x_l text, bau50_iv_x_l text, bau80_iv_x_l text, opt30_iv_x_l text, opt50_iv_x_l text, opt80_iv_x_l text, pes30_iv_x_l text, pes50_iv_x_l text, pes80_iv_x_l text, bau30_sv_x_l text, bau50_sv_x_l text, bau80_sv_x_l text, opt30_sv_x_l text, opt50_sv_x_l text, opt80_sv_x_l text, pes30_sv_x_l text, pes50_sv_x_l text, pes80_sv_x_l text, bau30_ba_x_r numeric, bau50_ba_x_r numeric, bau80_ba_x_r numeric, opt30_ba_x_r numeric, opt50_ba_x_r numeric, opt80_ba_x_r numeric, pes30_ba_x_r numeric, pes50_ba_x_r numeric, pes80_ba_x_r numeric, bau30_ww_x_r numeric, bau50_ww_x_r numeric, bau80_ww_x_r numeric, opt30_ww_x_r numeric, opt50_ww_x_r numeric, opt80_ww_x_r numeric, pes30_ww_x_r numeric, pes50_ww_x_r numeric, pes80_ww_x_r numeric, bau30_ws_x_r numeric, bau50_ws_x_r numeric, bau80_ws_x_r numeric, opt30_ws_x_r numeric, opt50_ws_x_r numeric, opt80_ws_x_r numeric, pes30_ws_x_r numeric, pes50_ws_x_r numeric, pes80_ws_x_r numeric, bau30_wd_x_r numeric, bau50_wd_x_r numeric, bau80_wd_x_r numeric, opt30_wd_x_r numeric, opt50_wd_x_r numeric, opt80_wd_x_r numeric, pes30_wd_x_r numeric, pes50_wd_x_r numeric, pes80_wd_x_r numeric, bau30_iv_x_r numeric, bau50_iv_x_r numeric, bau80_iv_x_r numeric, opt30_iv_x_r numeric, opt50_iv_x_r numeric, opt80_iv_x_r numeric, pes30_iv_x_r numeric, pes50_iv_x_r numeric, pes80_iv_x_r numeric, bau30_sv_x_r numeric, bau50_sv_x_r numeric, bau80_sv_x_r numeric, opt30_sv_x_r numeric, opt50_sv_x_r numeric, opt80_sv_x_r numeric, pes30_sv_x_r numeric, pes50_sv_x_r numeric, pes80_sv_x_r numeric, the_geom geometry);

CREATE OR REPLACE FUNCTION get_aqpoints_projected_04_all(ids TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_projected_04_all as $$
    BEGIN
    RETURN query EXECUTE 'with points as (SELECT points_id, location_name, input_address, match_address, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM (SELECT unnest(Array'|| ids ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address) a) SELECT points.points_id::numeric, points.location_name, points.input_address, points.match_address, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude,  hn.maj_name as major_basin_name, hn.sub_name as minor_basin_name, aq.major_aquifer_system_name as aquifer_name, g.pfaf_id::numeric, gid_1, gid_0, name_0, name_1, bau30_ba_x_l, bau50_ba_x_l, bau80_ba_x_l, opt30_ba_x_l, opt50_ba_x_l, opt80_ba_x_l, pes30_ba_x_l, pes50_ba_x_l, pes80_ba_x_l, bau30_ww_x_l, bau50_ww_x_l, bau80_ww_x_l, opt30_ww_x_l, opt50_ww_x_l, opt80_ww_x_l, pes30_ww_x_l, pes50_ww_x_l, pes80_ww_x_l, bau30_ws_x_l, bau50_ws_x_l, bau80_ws_x_l, opt30_ws_x_l, opt50_ws_x_l, opt80_ws_x_l, pes30_ws_x_l, pes50_ws_x_l, pes80_ws_x_l, bau30_wd_x_l, bau50_wd_x_l, bau80_wd_x_l, opt30_wd_x_l, opt50_wd_x_l, opt80_wd_x_l, pes30_wd_x_l, pes50_wd_x_l, pes80_wd_x_l, bau30_iv_x_l, bau50_iv_x_l, bau80_iv_x_l, opt30_iv_x_l, opt50_iv_x_l, opt80_iv_x_l, pes30_iv_x_l, pes50_iv_x_l, pes80_iv_x_l, bau30_sv_x_l, bau50_sv_x_l, bau80_sv_x_l, opt30_sv_x_l, opt50_sv_x_l, opt80_sv_x_l, pes30_sv_x_l, pes50_sv_x_l, pes80_sv_x_l, bau30_ba_x_r :: numeric, bau50_ba_x_r :: numeric, bau80_ba_x_r :: numeric, opt30_ba_x_r :: numeric, opt50_ba_x_r :: numeric, opt80_ba_x_r :: numeric, pes30_ba_x_r :: numeric, pes50_ba_x_r :: numeric, pes80_ba_x_r :: numeric, bau30_ww_x_r :: numeric, bau50_ww_x_r :: numeric, bau80_ww_x_r :: numeric, opt30_ww_x_r :: numeric, opt50_ww_x_r :: numeric, opt80_ww_x_r :: numeric, pes30_ww_x_r :: numeric, pes50_ww_x_r :: numeric, pes80_ww_x_r :: numeric, bau30_ws_x_r :: numeric, bau50_ws_x_r :: numeric, bau80_ws_x_r :: numeric, opt30_ws_x_r :: numeric, opt50_ws_x_r :: numeric, opt80_ws_x_r :: numeric, pes30_ws_x_r :: numeric, pes50_ws_x_r :: numeric, pes80_ws_x_r :: numeric, bau30_wd_x_r :: numeric, bau50_wd_x_r :: numeric, bau80_wd_x_r :: numeric, opt30_wd_x_r :: numeric, opt50_wd_x_r :: numeric, opt80_wd_x_r :: numeric, pes30_wd_x_r :: numeric, pes50_wd_x_r :: numeric, pes80_wd_x_r :: numeric, bau30_iv_x_r :: numeric, bau50_iv_x_r :: numeric, bau80_iv_x_r :: numeric, opt30_iv_x_r :: numeric, opt50_iv_x_r :: numeric, opt80_iv_x_r :: numeric, pes30_iv_x_r :: numeric, pes50_iv_x_r :: numeric, pes80_iv_x_r :: numeric, bau30_sv_x_r :: numeric, bau50_sv_x_r :: numeric, bau80_sv_x_r :: numeric, opt30_sv_x_r :: numeric, opt50_sv_x_r :: numeric, opt80_sv_x_r :: numeric, pes30_sv_x_r :: numeric, pes50_sv_x_r :: numeric, pes80_sv_x_r :: numeric, points.the_geom::geometry FROM points LEFT JOIN aqueduct_projections_40 g on ST_DWithin(g.the_geom , points.the_geom, 1e-10) LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on ST_DWithin(points.the_geom , hn.the_geom, 1e-10) LEFT JOIN gadm_wri w on ST_DWithin(w.the_geom, points.the_geom, 1e-10) LEFT JOIN aquifer_names_simple_v01 aq on ST_DWithin(aq.the_geom , points.the_geom, 1e-10)';

    END
$$ language 'plpgsql';



---------------------- get_aqpoints_projected_04

CREATE OR REPLACE FUNCTION get_aqpoints_projected_04(ids TEXT, year TEXT, type TEXT, indicator TEXT, scenario TEXT, points_array TEXT, locations_array TEXT, input_address_array TEXT, match_address_array TEXT)
    RETURNS SETOF point_intersection_projected_04 as $$
    BEGIN
    RETURN query EXECUTE  'with points as (SELECT points_id, location_name, input_address, match_address, st_setsrid(st_geomfromtext(points),4326) as the_geom FROM (SELECT unnest(Array'|| ids ||') as points_id, unnest(Array'|| points_array ||') as points, unnest(Array'|| locations_array ||') as location_name, unnest(Array'|| input_address_array ||') as input_address, unnest(Array'|| match_address_array ||') as match_address) a), water_risk_projected as (select * from water_risk_indicators_future_aqueduct40  WHERE year = '|| year ||'  and type = '|| type ||' and indicator = '|| indicator ||' and scenario = '|| scenario ||') SELECT points.points_id::numeric, points.location_name, points.input_address, points.match_address, ST_y(points.the_geom)::numeric as latitude, ST_x(points.the_geom)::numeric as longitude,  hn.maj_name as major_basin_name, hn.sub_name as minor_basin_name, aq.major_aquifer_system_name as aquifer_name, g.pfaf_id::numeric, g.gid_1, gid_0, name_0, name_1, year::numeric, indicator, rn.type, scenario, value::numeric as raw, label, points.the_geom::geometry  FROM  points LEFT JOIN y2018m12d06_rh_master_shape_v01 g on ST_DWithin(g.the_geom , points.the_geom, 1e-10) LEFT JOIN hydrobasins_fao_fiona_merged_v01 hn on ST_DWithin(points.the_geom , hn.the_geom, 1e-10) LEFT JOIN gadm_wri w on ST_DWithin(w.the_geom, points.the_geom, 1e-10) LEFT JOIN aquifer_names_simple_v01 aq on ST_DWithin(aq.the_geom , points.the_geom, 1e-10) LEFT JOIN water_risk_projected rn on (rn.pfaf_id = g.pfaf_id)' ;

    END

$$ language 'plpgsql';



SELECT * FROM get_aqpoints_projected_04_all('[0, 1, 2]',
                                         '[''POINT(0.3515 41.3768)'', ''POINT(2.4169 49.7528)'', ''POINT(-16.3037 14.9023)'']',
                                         '[''Location_1'', ''Location_2'', ''Location_3'']',
                                         '[''address_1'', ''address_2'', ''address_3'']',
                                         '[''address_1'', ''address_2'', ''address_3'']')